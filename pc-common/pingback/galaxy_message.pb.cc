// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: galaxy_message.proto

#include "galaxy_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_galaxy_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_galaxy_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_galaxy_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto;
class LogEntry_BaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogEntry_BaseInfo> _instance;
} _LogEntry_BaseInfo_default_instance_;
class LogEntry_LiveInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogEntry_LiveInfo> _instance;
} _LogEntry_LiveInfo_default_instance_;
class LogEntry_ExtraInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogEntry_ExtraInfo> _instance;
} _LogEntry_ExtraInfo_default_instance_;
class LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogEntry> _instance;
} _LogEntry_default_instance_;
static void InitDefaultsLogEntry_BaseInfo_galaxy_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LogEntry_BaseInfo_default_instance_;
    new (ptr) ::LogEntry_BaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogEntry_BaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogEntry_BaseInfo_galaxy_5fmessage_2eproto}, {}};

static void InitDefaultsLogEntry_LiveInfo_galaxy_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LogEntry_LiveInfo_default_instance_;
    new (ptr) ::LogEntry_LiveInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogEntry_LiveInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogEntry_LiveInfo_galaxy_5fmessage_2eproto}, {}};

static void InitDefaultsLogEntry_ExtraInfo_galaxy_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LogEntry_ExtraInfo_default_instance_;
    new (ptr) ::LogEntry_ExtraInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogEntry_ExtraInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogEntry_ExtraInfo_galaxy_5fmessage_2eproto}, {}};

static void InitDefaultsLogEntry_galaxy_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LogEntry_default_instance_;
    new (ptr) ::LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LogEntry_galaxy_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLogEntry_galaxy_5fmessage_2eproto}, {
      &scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto.base,
      &scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto.base,
      &scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto.base,}};

void InitDefaults_galaxy_5fmessage_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogEntry_galaxy_5fmessage_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_galaxy_5fmessage_2eproto[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_galaxy_5fmessage_2eproto[9];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_galaxy_5fmessage_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_galaxy_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, systime_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, time_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, sessionid_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, uuid_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, company_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, sdkversion_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, userid_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, usertype_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, type_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, eventid_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, nettype_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, operatortype_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, requestcnt_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, business_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, os_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, channel_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, appversion_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, apptype_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, deviceinfo_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, osversion_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, appaction_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, info_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_BaseInfo, staytime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, lessonid_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, lessontype_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, serverip_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, userip_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_LiveInfo, classtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogEntry_ExtraInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LogEntry_ExtraInfo, key_),
  PROTOBUF_FIELD_OFFSET(::LogEntry_ExtraInfo, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LogEntry, baseinfo_),
  PROTOBUF_FIELD_OFFSET(::LogEntry, liveinfo_),
  PROTOBUF_FIELD_OFFSET(::LogEntry, extrainfo_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LogEntry_BaseInfo)},
  { 28, -1, sizeof(::LogEntry_LiveInfo)},
  { 38, -1, sizeof(::LogEntry_ExtraInfo)},
  { 45, -1, sizeof(::LogEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogEntry_BaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogEntry_LiveInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogEntry_ExtraInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogEntry_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_galaxy_5fmessage_2eproto = {
  {}, AddDescriptors_galaxy_5fmessage_2eproto, "galaxy_message.proto", schemas,
  file_default_instances, TableStruct_galaxy_5fmessage_2eproto::offsets,
  file_level_metadata_galaxy_5fmessage_2eproto, 4, file_level_enum_descriptors_galaxy_5fmessage_2eproto, file_level_service_descriptors_galaxy_5fmessage_2eproto,
};

const char descriptor_table_protodef_galaxy_5fmessage_2eproto[] =
  "\n\024galaxy_message.proto\"\362\016\n\010LogEntry\022$\n\010b"
  "aseInfo\030\001 \001(\0132\022.LogEntry.BaseInfo\022$\n\010liv"
  "eInfo\030\002 \001(\0132\022.LogEntry.LiveInfo\022&\n\textra"
  "Info\030\003 \003(\0132\023.LogEntry.ExtraInfo\032\267\004\n\010Base"
  "Info\022\017\n\007sysTime\030\001 \001(\003\022\014\n\004time\030\002 \001(\003\022\021\n\ts"
  "essionId\030\003 \001(\t\022\014\n\004uuid\030\004 \001(\t\022\"\n\007company\030"
  "\005 \001(\0162\021.LogEntry.Company\022(\n\nsdkVersion\030\006"
  " \001(\0162\024.LogEntry.SDKVersion\022\016\n\006userId\030\007 \001"
  "(\t\022$\n\010userType\030\010 \001(\0162\022.LogEntry.UserType"
  "\022\037\n\004type\030\t \001(\0162\021.LogEntry.LogType\022\017\n\007eve"
  "ntId\030\n \001(\t\022\"\n\007netType\030\013 \001(\0162\021.LogEntry.N"
  "etType\022,\n\014operatorType\030\014 \001(\0162\026.LogEntry."
  "OperatorType\022\022\n\nrequestCnt\030\r \001(\005\022\020\n\010busi"
  "ness\030\016 \001(\t\022\030\n\002os\030\017 \001(\0162\014.LogEntry.Os\022\017\n\007"
  "channel\030\020 \001(\t\022\022\n\nappVersion\030\021 \001(\t\022\017\n\007app"
  "Type\030\022 \001(\t\022\022\n\ndeviceInfo\030\023 \001(\t\022\021\n\tosVers"
  "ion\030\024 \001(\t\022&\n\tappAction\030\025 \001(\0162\023.LogEntry."
  "AppAction\022\014\n\004info\030\026 \001(\t\022\020\n\010stayTime\030\027 \001("
  "\003\032{\n\010LiveInfo\022\020\n\010lessonId\030\001 \001(\t\022(\n\nlesso"
  "nType\030\002 \001(\0162\024.LogEntry.LessonType\022\020\n\010ser"
  "verIp\030\003 \001(\t\022\016\n\006userIp\030\004 \001(\t\022\021\n\tclassType"
  "\030\005 \001(\t\032\'\n\tExtraInfo\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\t\"T\n\002Os\022\016\n\nOS_DEFAULT\020\000\022\006\n\002PC\020\001\022\013\n"
  "\007ANDROID\020\002\022\007\n\003IOS\020\003\022\007\n\003WEB\020\004\022\n\n\006SERVER\020\005"
  "\022\013\n\007BACKEND\020\006\"M\n\010UserType\022\024\n\020USERTYPE_DE"
  "FAULT\020\000\022\007\n\003STU\020\001\022\007\n\003TEA\020\002\022\006\n\002CC\020\003\022\006\n\002CR\020"
  "\004\022\t\n\005AUDIT\020\005\"b\n\007LogType\022\023\n\017LOGTYPE_DEFAU"
  "LT\020\000\022\t\n\005CLICK\020\001\022\006\n\002PV\020\002\022\r\n\tHEARTBEAT\020\003\022\007"
  "\n\003APP\020\004\022\013\n\007REFRESH\020\005\022\n\n\006SEARCH\020\006\"c\n\007NetT"
  "ype\022\023\n\017NETTYPE_DEFAULT\020\000\022\006\n\002G2\020\001\022\006\n\002G3\020\002"
  "\022\006\n\002G4\020\003\022\006\n\002G5\020\004\022\010\n\004WIFI\020\005\022\t\n\005CABLE\020\006\022\016\n"
  "\nNET_UNKNOW\020\007\"A\n\tAppAction\022\025\n\021APPACTION_"
  "DEFAULT\020\000\022\010\n\004OPEN\020\001\022\t\n\005CRASH\020\002\022\010\n\004EXIT\020\003"
  "\"A\n\007Company\022\023\n\017COMPANY_DEFAULT\020\000\022\010\n\004YIMI"
  "\020\001\022\t\n\005JUREN\020\002\022\014\n\010JRONLINE\020\003\"b\n\014OperatorT"
  "ype\022\030\n\024OPERATORTYPE_DEFAULT\020\000\022\n\n\006UNICOM\020"
  "\001\022\013\n\007TELECOM\020\002\022\n\n\006MOBILE\020\003\022\023\n\017OPERATOR_U"
  "NKNOW\020\004\"]\n\nLessonType\022\026\n\022LESSONTYPE_DEFA"
  "ULT\020\000\022\014\n\010AUDITION\020\001\022\t\n\005ORDER\020\002\022\016\n\nAUDITI"
  "ON_U\020\003\022\016\n\nAUDITION_N\020\004\"\332\002\n\nSDKVersion\022\026\n"
  "\022SDKVERSION_DEFAULT\020\000\022\010\n\004V100\020\001\022\010\n\004V101\020"
  "\002\022\010\n\004V102\020\003\022\010\n\004V103\020\004\022\010\n\004V104\020\005\022\010\n\004V105\020"
  "\006\022\010\n\004V106\020\007\022\010\n\004V107\020\010\022\010\n\004V108\020\t\022\010\n\004V109\020"
  "\n\022\010\n\004V110\020\013\022\010\n\004V111\020\014\022\010\n\004V112\020\r\022\010\n\004V113\020"
  "\016\022\010\n\004V114\020\017\022\010\n\004V115\020\020\022\010\n\004V116\020\021\022\010\n\004V117\020"
  "\022\022\010\n\004V118\020\023\022\010\n\004V119\020\024\022\010\n\004V120\020\025\022\010\n\004V121\020"
  "\026\022\010\n\004V122\020\027\022\010\n\004V123\020\030\022\010\n\004V124\020\031\022\010\n\004V125\020"
  "\032\022\010\n\004V126\020\033\022\010\n\004V127\020\034\022\010\n\004V128\020\035\022\010\n\004V129\020"
  "\036\022\010\n\004V130\020\037B\017B\rGalaxyMessageb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_galaxy_5fmessage_2eproto = {
  false, InitDefaults_galaxy_5fmessage_2eproto, 
  descriptor_table_protodef_galaxy_5fmessage_2eproto,
  "galaxy_message.proto", &assign_descriptors_table_galaxy_5fmessage_2eproto, 1956,
};

void AddDescriptors_galaxy_5fmessage_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_galaxy_5fmessage_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_galaxy_5fmessage_2eproto = []() { AddDescriptors_galaxy_5fmessage_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* LogEntry_Os_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[0];
}
bool LogEntry_Os_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_Os LogEntry::OS_DEFAULT;
const LogEntry_Os LogEntry::PC;
const LogEntry_Os LogEntry::ANDROID;
const LogEntry_Os LogEntry::IOS;
const LogEntry_Os LogEntry::WEB;
const LogEntry_Os LogEntry::SERVER;
const LogEntry_Os LogEntry::BACKEND;
const LogEntry_Os LogEntry::Os_MIN;
const LogEntry_Os LogEntry::Os_MAX;
const int LogEntry::Os_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_UserType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[1];
}
bool LogEntry_UserType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_UserType LogEntry::USERTYPE_DEFAULT;
const LogEntry_UserType LogEntry::STU;
const LogEntry_UserType LogEntry::TEA;
const LogEntry_UserType LogEntry::CC;
const LogEntry_UserType LogEntry::CR;
const LogEntry_UserType LogEntry::AUDIT;
const LogEntry_UserType LogEntry::UserType_MIN;
const LogEntry_UserType LogEntry::UserType_MAX;
const int LogEntry::UserType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_LogType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[2];
}
bool LogEntry_LogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_LogType LogEntry::LOGTYPE_DEFAULT;
const LogEntry_LogType LogEntry::CLICK;
const LogEntry_LogType LogEntry::PV;
const LogEntry_LogType LogEntry::HEARTBEAT;
const LogEntry_LogType LogEntry::APP;
const LogEntry_LogType LogEntry::REFRESH;
const LogEntry_LogType LogEntry::SEARCH;
const LogEntry_LogType LogEntry::LogType_MIN;
const LogEntry_LogType LogEntry::LogType_MAX;
const int LogEntry::LogType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_NetType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[3];
}
bool LogEntry_NetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_NetType LogEntry::NETTYPE_DEFAULT;
const LogEntry_NetType LogEntry::G2;
const LogEntry_NetType LogEntry::G3;
const LogEntry_NetType LogEntry::G4;
const LogEntry_NetType LogEntry::G5;
const LogEntry_NetType LogEntry::WIFI;
const LogEntry_NetType LogEntry::CABLE;
const LogEntry_NetType LogEntry::NET_UNKNOW;
const LogEntry_NetType LogEntry::NetType_MIN;
const LogEntry_NetType LogEntry::NetType_MAX;
const int LogEntry::NetType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_AppAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[4];
}
bool LogEntry_AppAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_AppAction LogEntry::APPACTION_DEFAULT;
const LogEntry_AppAction LogEntry::OPEN;
const LogEntry_AppAction LogEntry::CRASH;
const LogEntry_AppAction LogEntry::EXIT;
const LogEntry_AppAction LogEntry::AppAction_MIN;
const LogEntry_AppAction LogEntry::AppAction_MAX;
const int LogEntry::AppAction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_Company_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[5];
}
bool LogEntry_Company_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_Company LogEntry::COMPANY_DEFAULT;
const LogEntry_Company LogEntry::YIMI;
const LogEntry_Company LogEntry::JUREN;
const LogEntry_Company LogEntry::JRONLINE;
const LogEntry_Company LogEntry::Company_MIN;
const LogEntry_Company LogEntry::Company_MAX;
const int LogEntry::Company_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_OperatorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[6];
}
bool LogEntry_OperatorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_OperatorType LogEntry::OPERATORTYPE_DEFAULT;
const LogEntry_OperatorType LogEntry::UNICOM;
const LogEntry_OperatorType LogEntry::TELECOM;
const LogEntry_OperatorType LogEntry::MOBILE;
const LogEntry_OperatorType LogEntry::OPERATOR_UNKNOW;
const LogEntry_OperatorType LogEntry::OperatorType_MIN;
const LogEntry_OperatorType LogEntry::OperatorType_MAX;
const int LogEntry::OperatorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_LessonType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[7];
}
bool LogEntry_LessonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_LessonType LogEntry::LESSONTYPE_DEFAULT;
const LogEntry_LessonType LogEntry::AUDITION;
const LogEntry_LessonType LogEntry::ORDER;
const LogEntry_LessonType LogEntry::AUDITION_U;
const LogEntry_LessonType LogEntry::AUDITION_N;
const LogEntry_LessonType LogEntry::LessonType_MIN;
const LogEntry_LessonType LogEntry::LessonType_MAX;
const int LogEntry::LessonType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogEntry_SDKVersion_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_galaxy_5fmessage_2eproto);
  return file_level_enum_descriptors_galaxy_5fmessage_2eproto[8];
}
bool LogEntry_SDKVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogEntry_SDKVersion LogEntry::SDKVERSION_DEFAULT;
const LogEntry_SDKVersion LogEntry::V100;
const LogEntry_SDKVersion LogEntry::V101;
const LogEntry_SDKVersion LogEntry::V102;
const LogEntry_SDKVersion LogEntry::V103;
const LogEntry_SDKVersion LogEntry::V104;
const LogEntry_SDKVersion LogEntry::V105;
const LogEntry_SDKVersion LogEntry::V106;
const LogEntry_SDKVersion LogEntry::V107;
const LogEntry_SDKVersion LogEntry::V108;
const LogEntry_SDKVersion LogEntry::V109;
const LogEntry_SDKVersion LogEntry::V110;
const LogEntry_SDKVersion LogEntry::V111;
const LogEntry_SDKVersion LogEntry::V112;
const LogEntry_SDKVersion LogEntry::V113;
const LogEntry_SDKVersion LogEntry::V114;
const LogEntry_SDKVersion LogEntry::V115;
const LogEntry_SDKVersion LogEntry::V116;
const LogEntry_SDKVersion LogEntry::V117;
const LogEntry_SDKVersion LogEntry::V118;
const LogEntry_SDKVersion LogEntry::V119;
const LogEntry_SDKVersion LogEntry::V120;
const LogEntry_SDKVersion LogEntry::V121;
const LogEntry_SDKVersion LogEntry::V122;
const LogEntry_SDKVersion LogEntry::V123;
const LogEntry_SDKVersion LogEntry::V124;
const LogEntry_SDKVersion LogEntry::V125;
const LogEntry_SDKVersion LogEntry::V126;
const LogEntry_SDKVersion LogEntry::V127;
const LogEntry_SDKVersion LogEntry::V128;
const LogEntry_SDKVersion LogEntry::V129;
const LogEntry_SDKVersion LogEntry::V130;
const LogEntry_SDKVersion LogEntry::SDKVersion_MIN;
const LogEntry_SDKVersion LogEntry::SDKVersion_MAX;
const int LogEntry::SDKVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LogEntry_BaseInfo::InitAsDefaultInstance() {
}
class LogEntry_BaseInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry_BaseInfo::kSysTimeFieldNumber;
const int LogEntry_BaseInfo::kTimeFieldNumber;
const int LogEntry_BaseInfo::kSessionIdFieldNumber;
const int LogEntry_BaseInfo::kUuidFieldNumber;
const int LogEntry_BaseInfo::kCompanyFieldNumber;
const int LogEntry_BaseInfo::kSdkVersionFieldNumber;
const int LogEntry_BaseInfo::kUserIdFieldNumber;
const int LogEntry_BaseInfo::kUserTypeFieldNumber;
const int LogEntry_BaseInfo::kTypeFieldNumber;
const int LogEntry_BaseInfo::kEventIdFieldNumber;
const int LogEntry_BaseInfo::kNetTypeFieldNumber;
const int LogEntry_BaseInfo::kOperatorTypeFieldNumber;
const int LogEntry_BaseInfo::kRequestCntFieldNumber;
const int LogEntry_BaseInfo::kBusinessFieldNumber;
const int LogEntry_BaseInfo::kOsFieldNumber;
const int LogEntry_BaseInfo::kChannelFieldNumber;
const int LogEntry_BaseInfo::kAppVersionFieldNumber;
const int LogEntry_BaseInfo::kAppTypeFieldNumber;
const int LogEntry_BaseInfo::kDeviceInfoFieldNumber;
const int LogEntry_BaseInfo::kOsVersionFieldNumber;
const int LogEntry_BaseInfo::kAppActionFieldNumber;
const int LogEntry_BaseInfo::kInfoFieldNumber;
const int LogEntry_BaseInfo::kStayTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry_BaseInfo::LogEntry_BaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogEntry.BaseInfo)
}
LogEntry_BaseInfo::LogEntry_BaseInfo(const LogEntry_BaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  eventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.eventid().size() > 0) {
    eventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventid_);
  }
  business_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.business().size() > 0) {
    business_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.business_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appversion().size() > 0) {
    appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceinfo().size() > 0) {
    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.osversion().size() > 0) {
    osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
  }
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  ::memcpy(&systime_, &from.systime_,
    static_cast<size_t>(reinterpret_cast<char*>(&appaction_) -
    reinterpret_cast<char*>(&systime_)) + sizeof(appaction_));
  // @@protoc_insertion_point(copy_constructor:LogEntry.BaseInfo)
}

void LogEntry_BaseInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto.base);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&systime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appaction_) -
      reinterpret_cast<char*>(&systime_)) + sizeof(appaction_));
}

LogEntry_BaseInfo::~LogEntry_BaseInfo() {
  // @@protoc_insertion_point(destructor:LogEntry.BaseInfo)
  SharedDtor();
}

void LogEntry_BaseInfo::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogEntry_BaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogEntry_BaseInfo& LogEntry_BaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogEntry_BaseInfo_galaxy_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void LogEntry_BaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LogEntry.BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&systime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appaction_) -
      reinterpret_cast<char*>(&systime_)) + sizeof(appaction_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogEntry_BaseInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogEntry_BaseInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 sysTime = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_systime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string sessionId = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.sessionId");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string uuid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.uuid");
        object = msg->mutable_uuid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.Company company = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_company(static_cast<::LogEntry_Company>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .LogEntry.SDKVersion sdkVersion = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_sdkversion(static_cast<::LogEntry_SDKVersion>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string userId = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.userId");
        object = msg->mutable_userid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.UserType userType = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_usertype(static_cast<::LogEntry_UserType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .LogEntry.LogType type = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::LogEntry_LogType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string eventId = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.eventId");
        object = msg->mutable_eventid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.NetType netType = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_nettype(static_cast<::LogEntry_NetType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .LogEntry.OperatorType operatorType = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_operatortype(static_cast<::LogEntry_OperatorType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 requestCnt = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_requestcnt(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string business = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.business");
        object = msg->mutable_business();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.Os os = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_os(static_cast<::LogEntry_Os>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string channel = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.channel");
        object = msg->mutable_channel();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string appVersion = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.appVersion");
        object = msg->mutable_appversion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string appType = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.appType");
        object = msg->mutable_apptype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string deviceInfo = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.deviceInfo");
        object = msg->mutable_deviceinfo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string osVersion = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.osVersion");
        object = msg->mutable_osversion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.AppAction appAction = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_appaction(static_cast<::LogEntry_AppAction>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string info = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.BaseInfo.info");
        object = msg->mutable_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 stayTime = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 184) goto handle_unusual;
        msg->set_staytime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogEntry_BaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogEntry.BaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 sysTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sessionId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.sessionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.Company company = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_company(static_cast< ::LogEntry_Company >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.SDKVersion sdkVersion = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sdkversion(static_cast< ::LogEntry_SDKVersion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.userId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.UserType userType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_usertype(static_cast< ::LogEntry_UserType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.LogType type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::LogEntry_LogType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string eventId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eventid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eventid().data(), static_cast<int>(this->eventid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.eventId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.NetType netType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nettype(static_cast< ::LogEntry_NetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.OperatorType operatorType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operatortype(static_cast< ::LogEntry_OperatorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestCnt = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string business = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_business()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->business().data(), static_cast<int>(this->business().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.business"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.Os os = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_os(static_cast< ::LogEntry_Os >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appVersion = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appversion().data(), static_cast<int>(this->appversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.appVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appType = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apptype().data(), static_cast<int>(this->apptype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.appType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceInfo = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceinfo().data(), static_cast<int>(this->deviceinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.deviceInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string osVersion = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->osversion().data(), static_cast<int>(this->osversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.osVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.AppAction appAction = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_appaction(static_cast< ::LogEntry_AppAction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.BaseInfo.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stayTime = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (184 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &staytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogEntry.BaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogEntry.BaseInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogEntry_BaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogEntry.BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sysTime = 1;
  if (this->systime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->systime(), output);
  }

  // int64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // string sessionId = 3;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sessionid(), output);
  }

  // string uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uuid(), output);
  }

  // .LogEntry.Company company = 5;
  if (this->company() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->company(), output);
  }

  // .LogEntry.SDKVersion sdkVersion = 6;
  if (this->sdkversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->sdkversion(), output);
  }

  // string userId = 7;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->userid(), output);
  }

  // .LogEntry.UserType userType = 8;
  if (this->usertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->usertype(), output);
  }

  // .LogEntry.LogType type = 9;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // string eventId = 10;
  if (this->eventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventid().data(), static_cast<int>(this->eventid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.eventId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->eventid(), output);
  }

  // .LogEntry.NetType netType = 11;
  if (this->nettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->nettype(), output);
  }

  // .LogEntry.OperatorType operatorType = 12;
  if (this->operatortype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->operatortype(), output);
  }

  // int32 requestCnt = 13;
  if (this->requestcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->requestcnt(), output);
  }

  // string business = 14;
  if (this->business().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->business().data(), static_cast<int>(this->business().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.business");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->business(), output);
  }

  // .LogEntry.Os os = 15;
  if (this->os() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->os(), output);
  }

  // string channel = 16;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->channel(), output);
  }

  // string appVersion = 17;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), static_cast<int>(this->appversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.appVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->appversion(), output);
  }

  // string appType = 18;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptype().data(), static_cast<int>(this->apptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.appType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->apptype(), output);
  }

  // string deviceInfo = 19;
  if (this->deviceinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceinfo().data(), static_cast<int>(this->deviceinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.deviceInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->deviceinfo(), output);
  }

  // string osVersion = 20;
  if (this->osversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->osversion().data(), static_cast<int>(this->osversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.osVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->osversion(), output);
  }

  // .LogEntry.AppAction appAction = 21;
  if (this->appaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->appaction(), output);
  }

  // string info = 22;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->info(), output);
  }

  // int64 stayTime = 23;
  if (this->staytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->staytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogEntry.BaseInfo)
}

::google::protobuf::uint8* LogEntry_BaseInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogEntry.BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sysTime = 1;
  if (this->systime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->systime(), target);
  }

  // int64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  // string sessionId = 3;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sessionid(), target);
  }

  // string uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uuid(), target);
  }

  // .LogEntry.Company company = 5;
  if (this->company() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->company(), target);
  }

  // .LogEntry.SDKVersion sdkVersion = 6;
  if (this->sdkversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->sdkversion(), target);
  }

  // string userId = 7;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->userid(), target);
  }

  // .LogEntry.UserType userType = 8;
  if (this->usertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->usertype(), target);
  }

  // .LogEntry.LogType type = 9;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // string eventId = 10;
  if (this->eventid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventid().data(), static_cast<int>(this->eventid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.eventId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->eventid(), target);
  }

  // .LogEntry.NetType netType = 11;
  if (this->nettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->nettype(), target);
  }

  // .LogEntry.OperatorType operatorType = 12;
  if (this->operatortype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->operatortype(), target);
  }

  // int32 requestCnt = 13;
  if (this->requestcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->requestcnt(), target);
  }

  // string business = 14;
  if (this->business().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->business().data(), static_cast<int>(this->business().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.business");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->business(), target);
  }

  // .LogEntry.Os os = 15;
  if (this->os() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->os(), target);
  }

  // string channel = 16;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->channel(), target);
  }

  // string appVersion = 17;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), static_cast<int>(this->appversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.appVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->appversion(), target);
  }

  // string appType = 18;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptype().data(), static_cast<int>(this->apptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.appType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->apptype(), target);
  }

  // string deviceInfo = 19;
  if (this->deviceinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceinfo().data(), static_cast<int>(this->deviceinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.deviceInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->deviceinfo(), target);
  }

  // string osVersion = 20;
  if (this->osversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->osversion().data(), static_cast<int>(this->osversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.osVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->osversion(), target);
  }

  // .LogEntry.AppAction appAction = 21;
  if (this->appaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->appaction(), target);
  }

  // string info = 22;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.BaseInfo.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->info(), target);
  }

  // int64 stayTime = 23;
  if (this->staytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->staytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogEntry.BaseInfo)
  return target;
}

size_t LogEntry_BaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogEntry.BaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 3;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // string uuid = 4;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string userId = 7;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string eventId = 10;
  if (this->eventid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eventid());
  }

  // string business = 14;
  if (this->business().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->business());
  }

  // string channel = 16;
  if (this->channel().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  // string appVersion = 17;
  if (this->appversion().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appversion());
  }

  // string appType = 18;
  if (this->apptype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apptype());
  }

  // string deviceInfo = 19;
  if (this->deviceinfo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceinfo());
  }

  // string osVersion = 20;
  if (this->osversion().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->osversion());
  }

  // string info = 22;
  if (this->info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // int64 sysTime = 1;
  if (this->systime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());
  }

  // int64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // .LogEntry.Company company = 5;
  if (this->company() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->company());
  }

  // .LogEntry.SDKVersion sdkVersion = 6;
  if (this->sdkversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sdkversion());
  }

  // .LogEntry.UserType userType = 8;
  if (this->usertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->usertype());
  }

  // .LogEntry.LogType type = 9;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .LogEntry.NetType netType = 11;
  if (this->nettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nettype());
  }

  // .LogEntry.OperatorType operatorType = 12;
  if (this->operatortype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operatortype());
  }

  // int32 requestCnt = 13;
  if (this->requestcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestcnt());
  }

  // .LogEntry.Os os = 15;
  if (this->os() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->os());
  }

  // int64 stayTime = 23;
  if (this->staytime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->staytime());
  }

  // .LogEntry.AppAction appAction = 21;
  if (this->appaction() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->appaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogEntry_BaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogEntry.BaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry_BaseInfo* source =
      ::google::protobuf::DynamicCastToGenerated<LogEntry_BaseInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogEntry.BaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogEntry.BaseInfo)
    MergeFrom(*source);
  }
}

void LogEntry_BaseInfo::MergeFrom(const LogEntry_BaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogEntry.BaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.eventid().size() > 0) {

    eventid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventid_);
  }
  if (from.business().size() > 0) {

    business_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.business_);
  }
  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.appversion().size() > 0) {

    appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.deviceinfo().size() > 0) {

    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  if (from.osversion().size() > 0) {

    osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.systime() != 0) {
    set_systime(from.systime());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.company() != 0) {
    set_company(from.company());
  }
  if (from.sdkversion() != 0) {
    set_sdkversion(from.sdkversion());
  }
  if (from.usertype() != 0) {
    set_usertype(from.usertype());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.nettype() != 0) {
    set_nettype(from.nettype());
  }
  if (from.operatortype() != 0) {
    set_operatortype(from.operatortype());
  }
  if (from.requestcnt() != 0) {
    set_requestcnt(from.requestcnt());
  }
  if (from.os() != 0) {
    set_os(from.os());
  }
  if (from.staytime() != 0) {
    set_staytime(from.staytime());
  }
  if (from.appaction() != 0) {
    set_appaction(from.appaction());
  }
}

void LogEntry_BaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogEntry.BaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry_BaseInfo::CopyFrom(const LogEntry_BaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogEntry.BaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry_BaseInfo::IsInitialized() const {
  return true;
}

void LogEntry_BaseInfo::Swap(LogEntry_BaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry_BaseInfo::InternalSwap(LogEntry_BaseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  eventid_.Swap(&other->eventid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  business_.Swap(&other->business_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appversion_.Swap(&other->appversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deviceinfo_.Swap(&other->deviceinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  osversion_.Swap(&other->osversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(systime_, other->systime_);
  swap(time_, other->time_);
  swap(company_, other->company_);
  swap(sdkversion_, other->sdkversion_);
  swap(usertype_, other->usertype_);
  swap(type_, other->type_);
  swap(nettype_, other->nettype_);
  swap(operatortype_, other->operatortype_);
  swap(requestcnt_, other->requestcnt_);
  swap(os_, other->os_);
  swap(staytime_, other->staytime_);
  swap(appaction_, other->appaction_);
}

::google::protobuf::Metadata LogEntry_BaseInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_galaxy_5fmessage_2eproto);
  return ::file_level_metadata_galaxy_5fmessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogEntry_LiveInfo::InitAsDefaultInstance() {
}
class LogEntry_LiveInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry_LiveInfo::kLessonIdFieldNumber;
const int LogEntry_LiveInfo::kLessonTypeFieldNumber;
const int LogEntry_LiveInfo::kServerIpFieldNumber;
const int LogEntry_LiveInfo::kUserIpFieldNumber;
const int LogEntry_LiveInfo::kClassTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry_LiveInfo::LogEntry_LiveInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogEntry.LiveInfo)
}
LogEntry_LiveInfo::LogEntry_LiveInfo(const LogEntry_LiveInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lessonid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lessonid().size() > 0) {
    lessonid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lessonid_);
  }
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverip().size() > 0) {
    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  userip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userip().size() > 0) {
    userip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userip_);
  }
  classtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.classtype().size() > 0) {
    classtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classtype_);
  }
  lessontype_ = from.lessontype_;
  // @@protoc_insertion_point(copy_constructor:LogEntry.LiveInfo)
}

void LogEntry_LiveInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto.base);
  lessonid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lessontype_ = 0;
}

LogEntry_LiveInfo::~LogEntry_LiveInfo() {
  // @@protoc_insertion_point(destructor:LogEntry.LiveInfo)
  SharedDtor();
}

void LogEntry_LiveInfo::SharedDtor() {
  lessonid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogEntry_LiveInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogEntry_LiveInfo& LogEntry_LiveInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogEntry_LiveInfo_galaxy_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void LogEntry_LiveInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LogEntry.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lessonid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lessontype_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogEntry_LiveInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogEntry_LiveInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string lessonId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.LiveInfo.lessonId");
        object = msg->mutable_lessonid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .LogEntry.LessonType lessonType = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_lessontype(static_cast<::LogEntry_LessonType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string serverIp = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.LiveInfo.serverIp");
        object = msg->mutable_serverip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string userIp = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.LiveInfo.userIp");
        object = msg->mutable_userip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string classType = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.LiveInfo.classType");
        object = msg->mutable_classtype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogEntry_LiveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogEntry.LiveInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string lessonId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lessonid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lessonid().data(), static_cast<int>(this->lessonid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.LiveInfo.lessonId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.LessonType lessonType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lessontype(static_cast< ::LogEntry_LessonType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverIp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), static_cast<int>(this->serverip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.LiveInfo.serverIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userIp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userip().data(), static_cast<int>(this->userip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.LiveInfo.userIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string classType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classtype().data(), static_cast<int>(this->classtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.LiveInfo.classType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogEntry.LiveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogEntry.LiveInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogEntry_LiveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogEntry.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string lessonId = 1;
  if (this->lessonid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lessonid().data(), static_cast<int>(this->lessonid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.lessonId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lessonid(), output);
  }

  // .LogEntry.LessonType lessonType = 2;
  if (this->lessontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->lessontype(), output);
  }

  // string serverIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.serverIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverip(), output);
  }

  // string userIp = 4;
  if (this->userip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userip().data(), static_cast<int>(this->userip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.userIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->userip(), output);
  }

  // string classType = 5;
  if (this->classtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classtype().data(), static_cast<int>(this->classtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.classType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->classtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogEntry.LiveInfo)
}

::google::protobuf::uint8* LogEntry_LiveInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogEntry.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string lessonId = 1;
  if (this->lessonid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lessonid().data(), static_cast<int>(this->lessonid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.lessonId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lessonid(), target);
  }

  // .LogEntry.LessonType lessonType = 2;
  if (this->lessontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->lessontype(), target);
  }

  // string serverIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.serverIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverip(), target);
  }

  // string userIp = 4;
  if (this->userip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userip().data(), static_cast<int>(this->userip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.userIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->userip(), target);
  }

  // string classType = 5;
  if (this->classtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classtype().data(), static_cast<int>(this->classtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.LiveInfo.classType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->classtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogEntry.LiveInfo)
  return target;
}

size_t LogEntry_LiveInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogEntry.LiveInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lessonId = 1;
  if (this->lessonid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lessonid());
  }

  // string serverIp = 3;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // string userIp = 4;
  if (this->userip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userip());
  }

  // string classType = 5;
  if (this->classtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classtype());
  }

  // .LogEntry.LessonType lessonType = 2;
  if (this->lessontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lessontype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogEntry_LiveInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogEntry.LiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry_LiveInfo* source =
      ::google::protobuf::DynamicCastToGenerated<LogEntry_LiveInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogEntry.LiveInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogEntry.LiveInfo)
    MergeFrom(*source);
  }
}

void LogEntry_LiveInfo::MergeFrom(const LogEntry_LiveInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogEntry.LiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lessonid().size() > 0) {

    lessonid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lessonid_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.userip().size() > 0) {

    userip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userip_);
  }
  if (from.classtype().size() > 0) {

    classtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classtype_);
  }
  if (from.lessontype() != 0) {
    set_lessontype(from.lessontype());
  }
}

void LogEntry_LiveInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogEntry.LiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry_LiveInfo::CopyFrom(const LogEntry_LiveInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogEntry.LiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry_LiveInfo::IsInitialized() const {
  return true;
}

void LogEntry_LiveInfo::Swap(LogEntry_LiveInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry_LiveInfo::InternalSwap(LogEntry_LiveInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  lessonid_.Swap(&other->lessonid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverip_.Swap(&other->serverip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userip_.Swap(&other->userip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  classtype_.Swap(&other->classtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lessontype_, other->lessontype_);
}

::google::protobuf::Metadata LogEntry_LiveInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_galaxy_5fmessage_2eproto);
  return ::file_level_metadata_galaxy_5fmessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogEntry_ExtraInfo::InitAsDefaultInstance() {
}
class LogEntry_ExtraInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry_ExtraInfo::kKeyFieldNumber;
const int LogEntry_ExtraInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry_ExtraInfo::LogEntry_ExtraInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogEntry.ExtraInfo)
}
LogEntry_ExtraInfo::LogEntry_ExtraInfo(const LogEntry_ExtraInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:LogEntry.ExtraInfo)
}

void LogEntry_ExtraInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogEntry_ExtraInfo::~LogEntry_ExtraInfo() {
  // @@protoc_insertion_point(destructor:LogEntry.ExtraInfo)
  SharedDtor();
}

void LogEntry_ExtraInfo::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogEntry_ExtraInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogEntry_ExtraInfo& LogEntry_ExtraInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogEntry_ExtraInfo_galaxy_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void LogEntry_ExtraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LogEntry.ExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogEntry_ExtraInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogEntry_ExtraInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.ExtraInfo.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LogEntry.ExtraInfo.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogEntry_ExtraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogEntry.ExtraInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.ExtraInfo.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogEntry.ExtraInfo.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogEntry.ExtraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogEntry.ExtraInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogEntry_ExtraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogEntry.ExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.ExtraInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.ExtraInfo.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogEntry.ExtraInfo)
}

::google::protobuf::uint8* LogEntry_ExtraInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogEntry.ExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.ExtraInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogEntry.ExtraInfo.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogEntry.ExtraInfo)
  return target;
}

size_t LogEntry_ExtraInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogEntry.ExtraInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogEntry_ExtraInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogEntry.ExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry_ExtraInfo* source =
      ::google::protobuf::DynamicCastToGenerated<LogEntry_ExtraInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogEntry.ExtraInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogEntry.ExtraInfo)
    MergeFrom(*source);
  }
}

void LogEntry_ExtraInfo::MergeFrom(const LogEntry_ExtraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogEntry.ExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void LogEntry_ExtraInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogEntry.ExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry_ExtraInfo::CopyFrom(const LogEntry_ExtraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogEntry.ExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry_ExtraInfo::IsInitialized() const {
  return true;
}

void LogEntry_ExtraInfo::Swap(LogEntry_ExtraInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry_ExtraInfo::InternalSwap(LogEntry_ExtraInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LogEntry_ExtraInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_galaxy_5fmessage_2eproto);
  return ::file_level_metadata_galaxy_5fmessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogEntry::InitAsDefaultInstance() {
  ::_LogEntry_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::LogEntry_BaseInfo*>(
      ::LogEntry_BaseInfo::internal_default_instance());
  ::_LogEntry_default_instance_._instance.get_mutable()->liveinfo_ = const_cast< ::LogEntry_LiveInfo*>(
      ::LogEntry_LiveInfo::internal_default_instance());
}
class LogEntry::HasBitSetters {
 public:
  static const ::LogEntry_BaseInfo& baseinfo(const LogEntry* msg);
  static const ::LogEntry_LiveInfo& liveinfo(const LogEntry* msg);
};

const ::LogEntry_BaseInfo&
LogEntry::HasBitSetters::baseinfo(const LogEntry* msg) {
  return *msg->baseinfo_;
}
const ::LogEntry_LiveInfo&
LogEntry::HasBitSetters::liveinfo(const LogEntry* msg) {
  return *msg->liveinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry::kBaseInfoFieldNumber;
const int LogEntry::kLiveInfoFieldNumber;
const int LogEntry::kExtraInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry::LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      extrainfo_(from.extrainfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::LogEntry_BaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = nullptr;
  }
  if (from.has_liveinfo()) {
    liveinfo_ = new ::LogEntry_LiveInfo(*from.liveinfo_);
  } else {
    liveinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:LogEntry)
}

void LogEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogEntry_galaxy_5fmessage_2eproto.base);
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&liveinfo_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(liveinfo_));
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:LogEntry)
  SharedDtor();
}

void LogEntry::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete liveinfo_;
}

void LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogEntry& LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogEntry_galaxy_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extrainfo_.Clear();
  if (GetArenaNoVirtual() == nullptr && baseinfo_ != nullptr) {
    delete baseinfo_;
  }
  baseinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && liveinfo_ != nullptr) {
    delete liveinfo_;
  }
  liveinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .LogEntry.BaseInfo baseInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::LogEntry_BaseInfo::_InternalParse;
        object = msg->mutable_baseinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .LogEntry.LiveInfo liveInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::LogEntry_LiveInfo::_InternalParse;
        object = msg->mutable_liveinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .LogEntry.ExtraInfo extraInfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::LogEntry_ExtraInfo::_InternalParse;
          object = msg->add_extrainfo();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LogEntry.BaseInfo baseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LogEntry.LiveInfo liveInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_liveinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LogEntry.ExtraInfo extraInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extrainfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LogEntry.BaseInfo baseInfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::baseinfo(this), output);
  }

  // .LogEntry.LiveInfo liveInfo = 2;
  if (this->has_liveinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::liveinfo(this), output);
  }

  // repeated .LogEntry.ExtraInfo extraInfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extrainfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extrainfo(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogEntry)
}

::google::protobuf::uint8* LogEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LogEntry.BaseInfo baseInfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::baseinfo(this), target);
  }

  // .LogEntry.LiveInfo liveInfo = 2;
  if (this->has_liveinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::liveinfo(this), target);
  }

  // repeated .LogEntry.ExtraInfo extraInfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extrainfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extrainfo(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogEntry)
  return target;
}

size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .LogEntry.ExtraInfo extraInfo = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extrainfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extrainfo(static_cast<int>(i)));
    }
  }

  // .LogEntry.BaseInfo baseInfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .LogEntry.LiveInfo liveInfo = 2;
  if (this->has_liveinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *liveinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry* source =
      ::google::protobuf::DynamicCastToGenerated<LogEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogEntry)
    MergeFrom(*source);
  }
}

void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extrainfo_.MergeFrom(from.extrainfo_);
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::LogEntry_BaseInfo::MergeFrom(from.baseinfo());
  }
  if (from.has_liveinfo()) {
    mutable_liveinfo()->::LogEntry_LiveInfo::MergeFrom(from.liveinfo());
  }
}

void LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::Swap(LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&extrainfo_)->InternalSwap(CastToBase(&other->extrainfo_));
  swap(baseinfo_, other->baseinfo_);
  swap(liveinfo_, other->liveinfo_);
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_galaxy_5fmessage_2eproto);
  return ::file_level_metadata_galaxy_5fmessage_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::LogEntry_BaseInfo* Arena::CreateMaybeMessage< ::LogEntry_BaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::LogEntry_BaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::LogEntry_LiveInfo* Arena::CreateMaybeMessage< ::LogEntry_LiveInfo >(Arena* arena) {
  return Arena::CreateInternal< ::LogEntry_LiveInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::LogEntry_ExtraInfo* Arena::CreateMaybeMessage< ::LogEntry_ExtraInfo >(Arena* arena) {
  return Arena::CreateInternal< ::LogEntry_ExtraInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::LogEntry* Arena::CreateMaybeMessage< ::LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::LogEntry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
